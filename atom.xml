<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Steve_braveman</title>
  
  <subtitle>He is TRUE VEGETABLE!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-17T07:38:25.069Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Steve_braveman</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>-其它-[置顶] 关于我</title>
    <link href="http://yoursite.com/2018/08/17/21/"/>
    <id>http://yoursite.com/2018/08/17/21/</id>
    <published>2018-08-17T07:15:05.000Z</published>
    <updated>2018-08-17T07:38:25.069Z</updated>
    
    <content type="html"><![CDATA[<p>一个非常蒻的蒟蒻而已。</p><p>今年即将参加人生第一场NOIp。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">long</span> NOIp2018_RP;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">    NOIp2018_RP++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      自我介绍
    
    </summary>
    
    
      <category term="其它" scheme="http://yoursite.com/tags/%E5%85%B6%E5%AE%83/"/>
    
  </entry>
  
  <entry>
    <title>-并查集- [BZOJ  4195][NOI 2015]程序自动分析</title>
    <link href="http://yoursite.com/2018/08/17/20/"/>
    <id>http://yoursite.com/2018/08/17/20/</id>
    <published>2018-08-17T07:13:22.000Z</published>
    <updated>2018-08-17T09:02:44.124Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>在实现程序自动分析的过程中，常常需要判定一些约束条件是否能被同时满足。</p><p>考虑一个约束满足问题的简化版本：假设x1,x2,x3…代表程序中出现的变量，给定n个形如xi=xj或xi≠xj的变量相等/不等的约束条件，请判定是否可以分别为每一个变量赋予恰当的值，使得上述所有约束条件同时被满足。例如，一个问题中的约束条件为：x1=x2,x2=x3,x3=x4,x4≠x1，这些约束条件显然是不可能同时被满足的，因此这个问题应判定为不可被满足。</p><p>现在给出一些约束满足问题，请分别对它们进行判定。</p><h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>输入文件的第1行包含1个正整数t，表示需要判定的问题个数。注意这些问题之间是相互独立的。</p><p>对于每个问题，包含若干行：</p><p>第1行包含1个正整数n，表示该问题中需要被满足的约束条件个数。接下来n行，每行包括3个整数i,j,e，描述1个相等/不等的约束条件，相邻整数之间用单个空格隔开。若e=1，则该约束条件为xi=xj；若e=0，则该约束条件为xi≠xj；</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>输出文件包括t行。</p><p>输出文件的第 k行输出一个字符串“ YES” 或者“ NO”（不包含引号，字母全部大写），“ YES” 表示输入中的第k个问题判定为可以被满足，“ NO” 表示不可被满足。</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><p>2<br>2<br>1 2 1<br>1 2 0<br>2<br>1 2 1<br>2 1 1</p><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><p>NO<br>YES</p><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>在第一个问题中，约束条件为：x1=x2,x1≠x2。这两个约束条件互相矛盾，因此不可被同时满足。</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>这道题我们可以使用并查集来做，把相等的合并到一个集合里，如果出现不等判定一下是否在一个集合里；</p><p>注意：千万别用map，千万别用map，会超时，所以还是乖乖写离散化吧。</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MOD 10000019</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line"><span class="keyword">int</span> x,y,e;</span><br><span class="line">&#125; bcj[MOD*<span class="number">2</span>];</span><br><span class="line"><span class="keyword">int</span> disa=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.e&gt;b.e;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> fa[<span class="number">200005</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(fa[x]!=x) <span class="keyword">return</span> fa[x]=find(fa[x]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">un</span><span class="params">(<span class="keyword">int</span> r1,<span class="keyword">int</span> r2)</span> </span>&#123;</span><br><span class="line">fa[r1]=r2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> t;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;t;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> q=<span class="number">1</span>; q&lt;=t; q++) &#123;</span><br><span class="line">disa=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">bool</span> flag=<span class="number">1</span>;</span><br><span class="line"><span class="built_in">memset</span>(ls,<span class="number">0</span>,<span class="keyword">sizeof</span>(ls));</span><br><span class="line"><span class="built_in">memset</span>(fa,<span class="number">0</span>,<span class="keyword">sizeof</span>(fa));</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;m;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) &#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;bcj[i].x,&amp;bcj[i].y,&amp;bcj[i].e);</span><br><span class="line">ls[disa++]=bcj[i].x;</span><br><span class="line">ls[disa++]=bcj[i].y;</span><br><span class="line">&#125;</span><br><span class="line">sort(ls,ls+disa);</span><br><span class="line"><span class="keyword">int</span> x=unique(ls,ls+disa)-ls;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) &#123;</span><br><span class="line">bcj[i].x=lower_bound(ls,ls+x,bcj[i].x)-ls;</span><br><span class="line">bcj[i].y=lower_bound(ls,ls+x,bcj[i].y)-ls;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=x; i++) &#123;</span><br><span class="line">fa[i]=i;</span><br><span class="line">&#125;</span><br><span class="line">sort(bcj+<span class="number">1</span>,bcj+<span class="number">1</span>+m,cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=m; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> g=find(bcj[i].x);</span><br><span class="line"><span class="keyword">int</span> h=find(bcj[i].y);</span><br><span class="line"><span class="keyword">if</span>(bcj[i].e) &#123;</span><br><span class="line">un(g,h);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(g==h) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line">flag=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">flag=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      NOI原题
    
    </summary>
    
    
      <category term="并查集" scheme="http://yoursite.com/tags/%E5%B9%B6%E6%9F%A5%E9%9B%86/"/>
    
      <category term="BZOJ" scheme="http://yoursite.com/tags/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title>-最小生成树- [洛谷 P1546][USACO]最短网络</title>
    <link href="http://yoursite.com/2018/08/17/19/"/>
    <id>http://yoursite.com/2018/08/17/19/</id>
    <published>2018-08-17T07:11:54.000Z</published>
    <updated>2018-08-17T09:03:07.662Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h1><p>农民约翰被选为他们镇的镇长！他其中一个竞选承诺就是在镇上建立起互联网，并连接到所有的农场。当然，他需要你的帮助。</p><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>约翰已经给他的农场安排了一条高速的网络线路，他想把这条线路共享给其他农场。为了用最小的消费，他想铺设最短的光纤去连接所有的农场。</p><p>你将得到一份各农场之间连接费用的列表，你必须找出能连接所有农场并所用光纤最短的方案。每两个农场间的距离不会超过 $100000$ 。</p><h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>第一行： 农场的个数，$N（3&lt;=N&lt;=100）$。</p><p>第二行..结尾: 后来的行包含了一个$N \time N$的矩阵,表示每个农场之间的距离。理论上，他们是N行，每行由N个用空格分隔的数组成，实际上，他们限制在$80$个字符，因此，某些行会紧接着另一些行。当然，对角线将会是$0$，因为不会有线路从第 $i$ 个农场到它本身。</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>只有一个输出，其中包含连接到每个农场的光纤的最小长度。</p><h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><p>4<br>0 4 9 21<br>4 0 8 17<br>9 8 0 16<br>21 17 16 0</p><h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><p>28</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>这道题就是个最小生成树的模板题，但如果你用Kruskal，需要注意两点</p><p>1.数组一定要开大</p><p>2.手写cmp函数时一定要注意是<code>a.w&lt;b.w</code>千万别带等号，不然会T。。。</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> u,v;</span><br><span class="line">    <span class="keyword">int</span> w;</span><br><span class="line">&#125; Edge;</span><br><span class="line">Edge e[<span class="number">2000002</span>];</span><br><span class="line"><span class="keyword">int</span> fa[<span class="number">2000002</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> Edge &amp;a,<span class="keyword">const</span> Edge &amp;b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.w&lt;b.w) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(fa[n]==<span class="number">0</span>)  <span class="keyword">return</span> n;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> find(fa[n]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">uion</span><span class="params">(<span class="keyword">int</span> r1,<span class="keyword">int</span> r2)</span> </span>&#123;</span><br><span class="line">    r1=find(r1);</span><br><span class="line">    r2=find(r2);</span><br><span class="line">    <span class="keyword">if</span>(r1==r2) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(r1&lt;r2)   fa[r2]=r1;</span><br><span class="line">    <span class="keyword">else</span> fa[r1]=r2;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,p;</span><br><span class="line">    <span class="keyword">int</span> sum,count;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n; j++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;x);</span><br><span class="line">            <span class="keyword">if</span>(j&gt;i) &#123;</span><br><span class="line">                e[k].w=x;</span><br><span class="line">                e[k].u=i;</span><br><span class="line">                e[k].v=j;</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    k--;</span><br><span class="line">    sort(e+<span class="number">1</span>,e+<span class="number">1</span>+k,cmp);</span><br><span class="line">    <span class="built_in">memset</span>(fa,<span class="number">0</span>,<span class="keyword">sizeof</span>(fa));</span><br><span class="line">    sum=<span class="number">0</span>;</span><br><span class="line">    count=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=k; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(uion(e[i].u,e[i].v)) &#123;</span><br><span class="line">            sum+=e[i].w;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(count==n)  <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      USACO 最小生成树
    
    </summary>
    
    
      <category term="洛谷" scheme="http://yoursite.com/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="最小生成树" scheme="http://yoursite.com/tags/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>-DP- [洛谷 P1091][NOIp 2004]合唱队形</title>
    <link href="http://yoursite.com/2018/08/17/18/"/>
    <id>http://yoursite.com/2018/08/17/18/</id>
    <published>2018-08-17T07:10:12.000Z</published>
    <updated>2018-08-17T09:02:19.465Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>$N$ 位同学站成一排，音乐老师要请其中的( $N−K$ )位同学出列，使得剩下的 $K$ 位同学排成合唱队形。<br>合唱队形是指这样的一种队形：设K位同学从左到右依次编号为 $1,2,…,K$ ，他们的身高分别为 $T_1,T_2,…,T_K$ ， 则他们的身高满足 $T_1&lt;…<t_i>T_{i+1}&gt;…&gt;T_K(1 \le i \le K)$ 。<br>你的任务是，已知所有$N$位同学的身高，计算最少需要几位同学出列，可以使得剩下的同学排成合唱队形。</t_i></p><h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>共二行。<br>第一行是一个整数 $N(2 \le N \le 100)$ ，表示同学的总数。<br>第二行有 $n$ 个整数，用空格分隔，第 $i$ 个整数 $T_i(130 \le T_i \le 230)$ 是第 $i$ 位同学的身高（厘米）。</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>一个整数，最少需要几位同学出列。</p><h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><p>8<br>186 186 150 200 160 130 197 220</p><h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><p>4</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>首先分析一下题目，题目的意思是找出几个人排成一个先单调递增后单调递减的队伍；</p><p>所以我们可以这样求：先枚举到第 $i$ 个人然后求出第 $i$ 个人前的最长上升子序列，再求出第 $i$ 个人后最长下降子序列。</p><p>注：需要特判一下当出现只单调递增或只单调递减的情况。</p><h2 id="Cdoe"><a href="#Cdoe" class="headerlink" title="Cdoe"></a>Cdoe</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (a&gt;=b)?a:b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">105</span>],ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">bool</span> flag=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;=a[i<span class="number">-1</span>]) &#123;</span><br><span class="line">            flag=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">'0'</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;=a[i<span class="number">-1</span>]) &#123;</span><br><span class="line">            flag=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">'0'</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> b[<span class="number">105</span>],c[<span class="number">105</span>];</span><br><span class="line">    <span class="keyword">int</span> maxn=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;n; k++) &#123;</span><br><span class="line">        <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">        <span class="built_in">memset</span>(c,<span class="number">0</span>,<span class="keyword">sizeof</span>(c));</span><br><span class="line">        c[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        b[<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;k; i++) &#123;</span><br><span class="line">            b[i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (a[i]&gt;a[j]&amp;&amp;b[j]+<span class="number">1</span>&gt;b[i])</span><br><span class="line">                    b[i]=b[j]+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=k+<span class="number">1</span>; i&lt;n; i++) &#123;</span><br><span class="line">            c[i] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=k; j&lt;i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (a[i]&lt;a[j]&amp;&amp;c[j]+<span class="number">1</span>&gt;c[i])</span><br><span class="line">                    c[i]=c[j]+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> maxb=<span class="number">0</span>,maxc=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;k; i++) &#123;</span><br><span class="line">            maxb=max(b[i],maxb);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=k; i&lt;n; i++) &#123;</span><br><span class="line">            maxc=max(c[i],maxc);</span><br><span class="line">        &#125;</span><br><span class="line">        maxn=max(maxn,maxb+maxc);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;n-maxn&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      线性DP
    
    </summary>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
      <category term="洛谷" scheme="http://yoursite.com/tags/%E6%B4%9B%E8%B0%B7/"/>
    
  </entry>
  
  <entry>
    <title>-队列- [洛谷 P1540][NOIp 2010]机器翻译</title>
    <link href="http://yoursite.com/2018/08/17/17/"/>
    <id>http://yoursite.com/2018/08/17/17/</id>
    <published>2018-08-17T07:07:54.000Z</published>
    <updated>2018-08-17T09:02:17.788Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目背景"><a href="#题目背景" class="headerlink" title="题目背景"></a>题目背景</h1><p>小晨的电脑上安装了一个机器翻译软件，他经常用这个软件来翻译英语文章。</p><h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>这个翻译软件的原理很简单，它只是从头到尾，依次将每个英文单词用对应的中文含义来替换。对于每个英文单词，软件会先在内存中查找这个单词的中文含义，如果内存中有，软件就会用它进行翻译；如果内存中没有，软件就会在外存中的词典内查找，查出单词的中文含义然后翻译，并将这个单词和译义放入内存，以备后续的查找和翻译。<br>假设内存中有 $M$ 个单元，每单元能存放一个单词和译义。每当软件将一个新单词存入内存前，如果当前内存中已存入的单词数不超过 $M-1$ ，软件会将新单词存入一个未使用的内存单元；若内存中已存入 $M$ 个单词，软件会清空最早进入内存的那个单词，腾出单元来，存放新单词。<br>假设一篇英语文章的长度为 $N$ 个单词。给定这篇待译文章，翻译软件需要去外存查找多少次词典？假设在翻译开始前，内存中没有任何单词。</p><h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>共 $2$ 行。每行中两个数之间用一个空格隔开。<br>第一行为两个正整数 $M,N$ ，代表内存容量和文章的长度。<br>第二行为 $N$ 个非负整数，按照文章的顺序，每个数（大小不超过 $1000$ ）代表一个英文单词。文章中两个单词是同一个单词，当且仅当它们对应的非负整数相同。</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>一个整数，为软件需要查词典的次数。</p><h2 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h2><p>3 7<br>1 2 1 5 4 4 1</p><h2 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h2><p>5</p><h2 id="说明："><a href="#说明：" class="headerlink" title="说明："></a>说明：</h2><p>每个测试点 $1s$<br>对于 $10%$ 的数据有 $M=1,N≤5$ 。<br>对于 $100%$ 的数据有$ 0≤M≤100,0≤N≤10000$ 。<br>整个查字典过程如下：每行表示一个单词的翻译，冒号前为本次翻译后的内存状况：<br>空：内存初始状态为空。<br>1． $1$ ：查找单词$1$并调入内存。<br>2． $1 2$ ：查找单词 $2$ 并调入内存。<br>3． $1 2$ ：在内存中找到单词 $1$ 。<br>4． $1 2 5$ ：查找单词 $5$ 并调入内存。<br>5． $2 5 4$ ：查找单词 $4$ 并调入内存替代单词 $1$ 。<br>6． $2 5 4$ ：在内存中找到单词 $4$ 。<br>7． $5 4 1$ ：查找单词1并调入内存替代单词 $2$ 。<br>共计查了 55 次词典。</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>没什么说的，就是队列模板题。</p><p>_<strong>注意：千万不要把查找和找到搞混了！</strong>_</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> q[<span class="number">1005</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> chk=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> head=<span class="number">1</span>,tail=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n;</span><br><span class="line"><span class="comment">//for(int i=1;i&lt;=n;i++)&#123;</span></span><br><span class="line"><span class="comment">//q[i]=-1</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">0</span>||m==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x;</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;x;</span><br><span class="line">        <span class="keyword">bool</span> flag=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=head;j&lt;=tail;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(q[j]==x)&#123;</span><br><span class="line">                flag=<span class="number">1</span>;</span><br><span class="line"><span class="comment">//printf("Find %d\n",x);</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(tail-head+<span class="number">1</span>==m)&#123;</span><br><span class="line">            head++;</span><br><span class="line">            tail++;</span><br><span class="line">            chk++;</span><br><span class="line"><span class="comment">//printf("Add %d\n",x);</span></span><br><span class="line">            q[tail]=x;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            tail++;</span><br><span class="line">            chk++;</span><br><span class="line"><span class="comment">//printf("Add %d\n",x);</span></span><br><span class="line">            q[tail]=x;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;chk&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      NOIp 队列题
    
    </summary>
    
    
      <category term="洛谷" scheme="http://yoursite.com/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="队列" scheme="http://yoursite.com/tags/%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>-最小生成树- [BZOJ 1083][SCOI 2005]繁忙的都市</title>
    <link href="http://yoursite.com/2018/08/17/15-1/"/>
    <id>http://yoursite.com/2018/08/17/15-1/</id>
    <published>2018-08-17T07:05:26.000Z</published>
    <updated>2018-08-17T09:02:18.428Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>城市C是一个非常繁忙的大都市，城市中的道路十分的拥挤，于是市长决定对其中的道路进行改造。城市C的道<br>路是这样分布的：城市中有$n$个交叉路口，有些交叉路口之间有道路相连，两个交叉路口之间最多有一条道路相连<br>接。这些道路是双向的，且把所有的交叉路口直接或间接的连接起来了。每条道路都有一个分值，分值越小表示这<br>个道路越繁忙，越需要进行改造。但是市政府的资金有限，市长希望进行改造的道路越少越好，于是他提出下面的<br>要求： </p><p>1． 改造的那些道路能够把所有的交叉路口直接或间接的连通起来。 </p><p>2． 在满足要求1的情况下，改造的<br>道路尽量少。 </p><p>3． 在满足要求1、2的情况下，改造的那些道路中分值最大的道路分值尽量小。任务：作为市规划<br>局的你，应当作出最佳的决策，选择那些道路应当被修建。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>第一行有两个整数$n$,$m$表示城市有$n$个交叉路口，$m$条道路。接下来$m$行是对每条道路的描述，$u$，$v$，$c$表示交叉<br>路口$u$和$v$之间有道路相连，分值为$c$。$(1≤n≤300，1≤c≤10000)$</p><h2 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h2><p>两个整数$s$，$max$，表示你选出了几条道路，分值最大的那条道路的分值是多少。</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><p>4 5<br>1 2 3<br>1 4 5<br>2 4 7<br>2 3 6<br>3 4 8</p><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><p>3 6</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>首先让我们看看要求：</p><p>1． 改造的那些道路能够把所有的交叉路口直接或间接的连通起来。 </p><p>2． 在满足要求1的情况下，改造的<br>道路尽量少。 </p><p>3． 在满足要求1、2的情况下，改造的那些道路中分值最大的道路分值尽量小。任务：作为市规划<br>局的你，应当作出最佳的决策，选择那些道路应当被修建。</p><p>分析完之后，我们可以发现，这就是一道最小生成树的模板题。</p><p>由于我比较喜欢使用Kruskal，所以我写的是kruskal代码；</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> u, v;</span><br><span class="line"><span class="keyword">int</span> w;</span><br><span class="line">&#125; ;</span><br><span class="line">edge e[<span class="number">200002</span>];</span><br><span class="line"><span class="keyword">int</span> fa[<span class="number">200002</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(edge a, edge b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a.w&lt;b.w) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (fa[n] == <span class="number">0</span>)  <span class="keyword">return</span> n;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> find(fa[n]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> a &gt; b ? a : b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">un</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">a = find(a);</span><br><span class="line">b = find(b);</span><br><span class="line"><span class="keyword">if</span> (a == b) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (a&lt;b)   fa[b] = a;</span><br><span class="line"><span class="keyword">else</span> fa[a] = b;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, p;</span><br><span class="line"><span class="keyword">int</span> sum, ct;</span><br><span class="line"><span class="comment">//scanf("%d%d", &amp;n, &amp;p);</span></span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n &gt;&gt; p;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= p; i++) &#123;</span><br><span class="line"><span class="comment">//scanf("%d%d%d", &amp;e[i].u, &amp;e[i].v, &amp;e[i].w);</span></span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; e[i].u &gt;&gt; e[i].v &gt;&gt; e[i].w;</span><br><span class="line">&#125;</span><br><span class="line">sort(e + <span class="number">1</span>, e + <span class="number">1</span> + p, cmp);</span><br><span class="line"><span class="built_in">memset</span>(fa, <span class="number">0</span>, <span class="keyword">sizeof</span>(fa));</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line">ct = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> maxa = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= p; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (un(e[i].u, e[i].v)) &#123;</span><br><span class="line"><span class="comment">//sum += e[i].w;</span></span><br><span class="line">tot++;</span><br><span class="line">maxa = max(maxa,e[i].w);</span><br><span class="line">ct++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ct == n)  <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d"</span>, tot,maxa);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      四川省选题
    
    </summary>
    
    
      <category term="最小生成树" scheme="http://yoursite.com/tags/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/"/>
    
      <category term="BZOJ" scheme="http://yoursite.com/tags/BZOJ/"/>
    
  </entry>
  
  <entry>
    <title>-DP-递推- [洛谷 P1006][NOIp 2008]传纸条</title>
    <link href="http://yoursite.com/2018/08/17/15/"/>
    <id>http://yoursite.com/2018/08/17/15/</id>
    <published>2018-08-17T07:02:40.000Z</published>
    <updated>2018-08-17T09:02:15.578Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>小渊和小轩是好朋友也是同班同学，他们在一起总有谈不完的话题。一次素质拓展活动中，班上同学安排做成一个 $m$ 行 $n$ 列的矩阵，而小渊和小轩被安排在矩阵对角线的两端，因此，他们就无法直接交谈了。幸运的是，他们可以通过传纸条来进行交流。纸条要经由许多同学传到对方手里，小渊坐在矩阵的左上角，坐标 $(1,1)$，小轩坐在矩阵的右下角，坐标 $(m,n)$ 。从小渊传到小轩的纸条只可以向下或者向右传递，从小轩传给小渊的纸条只可以向上或者向左传递。</p><p>在活动进行中，小渊希望给小轩传递一张纸条，同时希望小轩给他回复。班里每个同学都可以帮他们传递，但只会帮他们一次，也就是说如果此人在小渊递给小轩纸条的时候帮忙，那么在小轩递给小渊的时候就不会再帮忙。反之亦然。</p><p>还有一件事情需要注意，全班每个同学愿意帮忙的好感度有高有低（注意：小渊和小轩的好心程度没有定义，输入时用 $0$ 表示），可以用一个 $0−100$ 的自然数来表示，数越大表示越好心。小渊和小轩希望尽可能找好心程度高的同学来帮忙传纸条，即找到来回两条传递路径，使得这 $2$ 条路径上同学的好心程度之和最大。现在，请你帮助小渊和小轩找到这样的 $2$ 条路径。</p><h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>输入文件，第一行有 $2$ 个用空格隔开的整数 $m$ 和 $n$ ，表示班里有 $m$ 行 $n$ 列。</p><p>接下来的 $m$ 行是一个 $m \times n$ 的矩阵，矩阵中第 $i$ 行 $j$ 列的整数表示坐在第 $i$ 行 $j$ 列的学生的好心程度。每行的 $n$ 个整数之间用空格隔开。</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>输出文件共一行，包含一个整数，表示来回 $2$ 条路上参与传递纸条的学生的好心程度之和的最大值。</p><h2 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h2><p>3 3<br>0 3 9<br>2 8 5<br>5 7 0</p><h2 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h2><p>34</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>首先让我们把问题转化一下，小渊给小轩传纸条，小轩也要给小渊传纸条，而且路径不能一样，其实就是相当于 _<strong>小渊选择两个不同的路径，给小轩传两张纸条</strong>_ 。<br>所以让我们来开一个四维数组f[i][j][p][q]，表示两张纸条传到$(i,j)$，$(p,q)$的最大总价值。<br>一张处于$(i,j)$的纸条一定是从$(i-1,j)$或$(i,j-1)$传过来，因为要最大，所以$f[i][j]=max(f[i-1][j],f[i][j-1])$。<br>于是我们可以写一个四重循环，时间复杂度为$O(n^4)$。<br>但是有一个地方需要注意！当$i=p$，$j=q$时，一定要特殊处理一下，不然就会出错。</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;\\手写max函数</span><br><span class="line"><span class="keyword">return</span> a&gt;b?a:b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> mp[<span class="number">50</span>][<span class="number">50</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">52</span>][<span class="number">52</span>][<span class="number">52</span>][<span class="number">52</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,v,m;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;m&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;v;</span><br><span class="line">mp[i][j]=v;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;<span class="comment">//下面开始四重循环</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> p=<span class="number">1</span>;p&lt;=m;p++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> q=<span class="number">1</span>;q&lt;=n;q++)&#123;</span><br><span class="line">f[i][j][p][q]=max(max(f[i<span class="number">-1</span>][j][p<span class="number">-1</span>][q],f[i][j<span class="number">-1</span>][p<span class="number">-1</span>][q]),max(f[i<span class="number">-1</span>][j][p][q<span class="number">-1</span>],f[i][j<span class="number">-1</span>][p][q<span class="number">-1</span>]))+mp[i][j]+mp[p][q];</span><br><span class="line"><span class="keyword">if</span>(i==p&amp;&amp;j==q) f[i][j][p][q]-=mp[p][q];<span class="comment">//特殊处理，不然会多加</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;f[m][n][m][n]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//完美结束</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><del>顺便说一句，如果你这道题A了，那么P1004也就能A了，并且P1004(方格取数)的数据还比P1006弱。。。。。。</del></p>]]></content>
    
    <summary type="html">
    
      NOIp DP题
    
    </summary>
    
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
      <category term="递推" scheme="http://yoursite.com/tags/%E9%80%92%E6%8E%A8/"/>
    
      <category term="洛谷" scheme="http://yoursite.com/tags/%E6%B4%9B%E8%B0%B7/"/>
    
  </entry>
  
  <entry>
    <title>-奇技淫巧- C++ 手动开O2优化</title>
    <link href="http://yoursite.com/2018/08/17/14/"/>
    <id>http://yoursite.com/2018/08/17/14/</id>
    <published>2018-08-17T07:01:34.000Z</published>
    <updated>2018-08-17T07:04:48.354Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>觉得自己的程序耗时太长？</p></li><li><p>费尽心思也卡不进那要命的时限？</p></li></ul><p>那就来这个吧，大幅度提升程序速度！</p><p>手动开启O2优化！</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> GCC optimize(2)</span></span><br></pre></td></tr></table></figure><p>PS：在一些特殊情况下O2会起到反作用，会使能AC的程序RE。。。。。</p><p>PS2：<code>NOIp</code>禁止使用O2及其他类似优化，会禁赛，不过<code>NOI</code>允许开。</p>]]></content>
    
    <summary type="html">
    
      小技巧
    
    </summary>
    
    
      <category term="奇技淫巧" scheme="http://yoursite.com/tags/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>-奇技淫巧- C++ 读入输出优化</title>
    <link href="http://yoursite.com/2018/08/17/13/"/>
    <id>http://yoursite.com/2018/08/17/13/</id>
    <published>2018-08-17T06:59:29.000Z</published>
    <updated>2018-08-17T08:59:49.916Z</updated>
    
    <content type="html"><![CDATA[<p>有一种比<code>scanf</code>和<code>printf</code>更快的输入输出，那就是读入输出优化！</p><h2 id="快读模板："><a href="#快读模板：" class="headerlink" title="快读模板："></a>快读模板：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">read</span><span class="params">(<span class="keyword">int</span> &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> f=<span class="number">1</span>,x=<span class="number">0</span>;<span class="keyword">char</span> s=getchar();</span><br><span class="line">    <span class="keyword">while</span>(s&lt;<span class="string">'0'</span>||s&gt;<span class="string">'9'</span>)&#123;<span class="keyword">if</span>(s==<span class="string">'-'</span>)f=<span class="number">-1</span>;s=getchar();&#125;</span><br><span class="line">    <span class="keyword">while</span>(s&gt;=<span class="string">'0'</span>&amp;&amp;s&lt;=<span class="string">'9'</span>)&#123;x=x*<span class="number">10</span>+s-<span class="string">'0'</span>;s=getchar();&#125;</span><br><span class="line">    x*=f;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="快速输出模板："><a href="#快速输出模板：" class="headerlink" title="快速输出模板："></a>快速输出模板：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">'-'</span>);</span><br><span class="line">        x=-x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)</span><br><span class="line">        write(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当输入输出的数据非常非常多时，就可用这个！</p><p><del>当然如果你懒得手敲读入输出优化代码，还是用<code>scanf</code>和<code>printf</code>吧</del></p>]]></content>
    
    <summary type="html">
    
      一个技巧
    
    </summary>
    
    
      <category term="奇技淫巧" scheme="http://yoursite.com/tags/%E5%A5%87%E6%8A%80%E6%B7%AB%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>-DFS-[CodeVS P3880]环素数</title>
    <link href="http://yoursite.com/2018/08/17/blog12/"/>
    <id>http://yoursite.com/2018/08/17/blog12/</id>
    <published>2018-08-17T06:47:25.000Z</published>
    <updated>2018-08-17T08:59:51.696Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>给定一个N(1&lt;=N&lt;=10)，求1——N组成的环，使得环上相邻的元素和为素数。</p><h2 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述"></a>输入描述</h2><p>一个整数N</p><h2 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述"></a>输出描述</h2><p>把1放在第一位置，按照字典顺序不重复地输出所有解（顺时针，逆时针算不同的两种），相邻两数之间严格用一个空格隔开，每一行的末尾不能有多余的空格。如果无解，则输出“no”。</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><p>8</p><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><p>1 2 3 8 5 6 7 4<br>1 2 5 8 3 4 7 6<br>1 4 7 6 5 8 3 2<br>1 6 7 4 3 8 5 2</p><h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>运用DFS，代码中会详细解释。</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,a[<span class="number">15</span>]= &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">bool</span> used[<span class="number">15</span>]= &#123;<span class="number">0</span>&#125;,flag=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">chk_prime</span><span class="params">(<span class="keyword">int</span> a)</span> </span>&#123;<span class="comment">//用于判断素数的函数</span></span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>; i&lt;=<span class="built_in">sqrt</span>(a); i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(a%i==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">chk</span><span class="params">()</span> </span>&#123;<span class="comment">//用于判断是否符合条件的函数</span></span><br><span class="line"><span class="keyword">int</span> p=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n<span class="number">-1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span>(chk_prime(a[i]+a[i+<span class="number">1</span>])==<span class="number">1</span>) &#123;</span><br><span class="line">p++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(chk_prime(a[n]+a[<span class="number">1</span>])==<span class="number">1</span>) p++;</span><br><span class="line"><span class="keyword">if</span>(p==n) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;<span class="comment">//用于打印的函数</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n<span class="number">-1</span>; i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,a[n]);</span><br><span class="line">flag=<span class="number">1</span>;<span class="comment">//标记存在答案</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;<span class="comment">//进行深度优先搜索(DFS)</span></span><br><span class="line"><span class="comment">//print();</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>; j&lt;=n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(used[j]==<span class="number">0</span>) &#123;<span class="comment">//如果这个数没用过</span></span><br><span class="line">a[i]=j;<span class="comment">//那就使用这个数</span></span><br><span class="line">used[j]=<span class="number">1</span>;<span class="comment">//把这个数标记为用过</span></span><br><span class="line"><span class="keyword">if</span>(i==n) &#123;</span><br><span class="line"><span class="keyword">if</span>(chk()==<span class="number">1</span>) &#123;</span><br><span class="line">print();<span class="comment">//打印答案</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">                        <span class="keyword">else</span> dfs(i+<span class="number">1</span>);</span><br><span class="line"><span class="comment">/*回溯部分*/</span></span><br><span class="line">                        used[j]=<span class="number">0</span>;</span><br><span class="line">a[i]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">a[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">used[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">dfs(<span class="number">2</span>);<span class="comment">//进行DFS</span></span><br><span class="line"><span class="keyword">if</span>(flag==<span class="number">0</span>)&#123;<span class="comment">//如果没有答案，就输出no</span></span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"no"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//程序结束</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      DFS题
    
    </summary>
    
    
      <category term="DFS" scheme="http://yoursite.com/tags/DFS/"/>
    
      <category term="CodeVS" scheme="http://yoursite.com/tags/CodeVS/"/>
    
  </entry>
  
  <entry>
    <title>-其它-几种常见排序</title>
    <link href="http://yoursite.com/2018/08/17/blog11g/"/>
    <id>http://yoursite.com/2018/08/17/blog11g/</id>
    <published>2018-08-17T06:39:18.000Z</published>
    <updated>2018-08-17T06:57:19.997Z</updated>
    
    <content type="html"><![CDATA[<h2 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h2><p>冒泡排序的原理总的来说就是小的浮上来，大的沉底。</p><p>思路：如果$a_i &lt; a_{i+1}$，则交换。</p><p>原理示意图：</p><p><img src="https://images2018.cnblogs.com/blog/1396752/201807/1396752-20180712152723291-445667032.gif" alt=""></p><p>冒泡排序的平均情况时间复杂度为$O(n^2)$。</p><p>代码如下：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Bubble_Sort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;=n<span class="number">-1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> m=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;=n-i; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(a[j]&gt;a[j+<span class="number">1</span>]) &#123;</span><br><span class="line">m=<span class="number">0</span>;</span><br><span class="line">temp=a[j];</span><br><span class="line">a[j]=a[j+<span class="number">1</span>];</span><br><span class="line">a[j+<span class="number">1</span>]=temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(m==<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><p>快排的思路是：先选取一个基准，然后将比基准小的放在左边，将比基准大的放在右边，然后再分小区间，重复以上操作。</p><p>原理示意图：</p><p><img src="https://images2018.cnblogs.com/blog/1396752/201807/1396752-20180712153636947-477837001.gif" alt=""></p><p>快速排序的平均情况时间复杂度为$O(n\log_2 n)$。</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Quick_Sort</span><span class="params">(<span class="keyword">int</span> s[], <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l&lt;r) &#123;</span><br><span class="line"><span class="keyword">int</span> low=l;</span><br><span class="line"><span class="keyword">int</span> high=r;</span><br><span class="line"><span class="keyword">int</span> pivot = s[l];</span><br><span class="line"><span class="keyword">while</span>(low&lt;high) &#123;</span><br><span class="line"><span class="keyword">while</span>(low&lt;high&amp;&amp;s[high]&gt;= pivot)</span><br><span class="line">high--;</span><br><span class="line"><span class="keyword">if</span>(low&lt;high)</span><br><span class="line">s[low++] = s[high];</span><br><span class="line"><span class="keyword">while</span>(low&lt;high&amp;&amp;s[low]&lt;pivot)</span><br><span class="line">low++;</span><br><span class="line"><span class="keyword">if</span>(low&lt;high)</span><br><span class="line">s[high--] = s[low];</span><br><span class="line">&#125;</span><br><span class="line">s[low]=pivot;</span><br><span class="line">QuickSort(s, l, low - <span class="number">1</span>);</span><br><span class="line">QuickSort(s, low + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="插入排序"><a href="#插入排序" class="headerlink" title="插入排序"></a>插入排序</h2><p>首先回忆一下你是怎么玩牌的，每次摸到一张牌，都要把它插入到正确位置。</p><p>插入排序的原理一样，首先查找一下它的正确位置$a_i$，然后将$a_i$后数向后移动一位，将这个数插入进去。</p><p>原理示意图：</p><p><img src="https://images2018.cnblogs.com/blog/1396752/201807/1396752-20180712155101590-1804739333.gif" alt=""></p><p>插入排序的平均情况时间复杂度是$O(n^2)$。</p><p>代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insertion_Sort</span><span class="params">(<span class="keyword">int</span> arr[],<span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j,key;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;length; i++) &#123;</span><br><span class="line">key=arr[i];</span><br><span class="line"><span class="keyword">for</span>(j=i<span class="number">-1</span>; j&gt;=<span class="number">0</span>; j--) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[j]&gt;key) &#123;</span><br><span class="line">arr[j+<span class="number">1</span>]=arr[j];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">arr[j+<span class="number">1</span>]=key;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><p>选择排序原理：首先找出最小值，然后放在数列的最前面，如此反复。</p><p>原理示意图：</p><p><img src="https://images2018.cnblogs.com/blog/1396752/201807/1396752-20180712155638040-191882328.gif" alt=""></p><p>选择排序的平均情况时间复杂度为$O(n^2)$。</p><p>代码如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Selection_Sort</span><span class="params">(<span class="keyword">int</span> a[],<span class="keyword">int</span> length)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="keyword">int</span> k=i;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;n;j++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j]&lt;a[k])&#123;</span><br><span class="line">k=j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> t=a[i];</span><br><span class="line">a[i]=a[k];</span><br><span class="line">a[k]=t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="桶排序"><a href="#桶排序" class="headerlink" title="桶排序"></a>桶排序</h2><p>设一个数组为桶，数组的大小为待排序数列的最大值加1，桶号即为数列的每一个值，当出现这个数时，对应的桶就加1。</p><p>原理示意图：</p><p><img src="https://images2018.cnblogs.com/blog/1396752/201807/1396752-20180712161127569-1369475575.gif" alt=""></p><p>桶排序的平均情况时间复杂度为$O(n)$，但空间复杂度为$O(n)$。</p><p>代码：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Bucket_Sort</span><span class="params">(<span class="keyword">int</span> a[], <span class="keyword">int</span> max, <span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> B[max+<span class="number">1</span>]= &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> i,j,count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;length; i++) &#123;</span><br><span class="line">B[a[i]]+=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;=max; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (B[i]&gt;<span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>; j&lt;B[i]; j++) &#123;</span><br><span class="line">a[count]=i;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="终极の排序"><a href="#终极の排序" class="headerlink" title="终极の排序"></a>终极の排序</h2><p>不需要任何算法，直接一个函数搞定！</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sort(a+<span class="number">1</span>,a+<span class="number">1</span>+n)</span><br></pre></td></tr></table></figure><p>别忘了加这个头文件：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br></pre></td></tr></table></figure></p><p>还可以通过写一个函数来决定从大到小排还是从小到大排。</p><p>PS:不知道因为什么原因图挂了。。。。我会修复的</p>]]></content>
    
    <summary type="html">
    
      排序算法
    
    </summary>
    
    
      <category term="其它" scheme="http://yoursite.com/tags/%E5%85%B6%E5%AE%83/"/>
    
  </entry>
  
  <entry>
    <title>-递推-[洛谷 P1096][NOIp 2007]Hanoi双塔问题</title>
    <link href="http://yoursite.com/2018/08/17/bog10/"/>
    <id>http://yoursite.com/2018/08/17/bog10/</id>
    <published>2018-08-17T06:38:53.000Z</published>
    <updated>2018-08-17T09:03:53.661Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>给定$A、B、C$三根足够长的细柱，在$A$柱上放有$2n$个中间有孔的圆盘，共有$n$个不同的尺寸，每个尺寸都有两个相同的圆盘，注意这两个圆盘是不加区分的。</p><p>现要将这些圆盘移到$C$柱上，在移动过程中可放在$B$柱上暂存。要求：<br>（1）每次只能移动一个圆盘；<br>（2）$A$、$B$、$C$三根细柱上的圆盘都要保持上小下大的顺序；<br>任务：设$A_n$为$2_n$个圆盘完成上述任务所需的最少移动次数，对于输入的$n$，输出$A_n$。</p><h2 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h2><p>一个正整数$n$，表示在$A$柱上放有$2n$个圆盘。<br>输出格式：</p><p>一个正整数, 为完成上述任务所需的最少移动次数$A_n$。</p><h2 id="样例输入："><a href="#样例输入：" class="headerlink" title="样例输入："></a>样例输入：</h2><p>2</p><h2 id="样例输入：-1"><a href="#样例输入：-1" class="headerlink" title="样例输入："></a>样例输入：</h2><p>6</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>首先我们知道如果是单个盘子，设$n$个盘子所需步数为$F(n)$ 则$F(n)=2*F(n-1)+1$</p><p>然而这道题是双盘，所以相当于把单盘移动次数乘2。</p><p>我们可以得出单盘的通项公式为$2^p-1$；</p><p>所以双盘的通项公式为$2^{p+1}-2$</p><p>这道题数据范围贼大，所以我们需要高精度</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Hanoi双塔问题.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100010</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">-1</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    a[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n+<span class="number">1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(a[j]&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            a[j]*=<span class="number">2</span>;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(a[k]&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[k]&gt;=<span class="number">10</span>)&#123;</span><br><span class="line">                a[k]%=<span class="number">10</span>;</span><br><span class="line">                <span class="keyword">if</span>(a[k+<span class="number">1</span>]&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                    a[k+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">                    a[k+<span class="number">1</span>]++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    a[k+<span class="number">1</span>]++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        j=<span class="number">1</span>;k=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> y=<span class="number">0</span>;</span><br><span class="line">    a[<span class="number">1</span>]-=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100000</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            y++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=y;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">代码</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      NOIp题
    
    </summary>
    
    
      <category term="递推" scheme="http://yoursite.com/tags/%E9%80%92%E6%8E%A8/"/>
    
      <category term="洛谷" scheme="http://yoursite.com/tags/%E6%B4%9B%E8%B0%B7/"/>
    
  </entry>
  
  <entry>
    <title>-DFS-[洛谷 P1025][NOIp 2001]数的划分</title>
    <link href="http://yoursite.com/2018/08/17/blog9/"/>
    <id>http://yoursite.com/2018/08/17/blog9/</id>
    <published>2018-08-17T06:38:36.000Z</published>
    <updated>2018-08-17T09:04:32.845Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h1><p>将整数 $n$ 分成$k$份，且每份不能为空，任意两个方案不相同(不考虑顺序)。</p><p>例如： $n=7$ ， $k=3$ ，下面三种分法被认为是相同的。</p><p>$1,1,5$;<br>$1,5,1$;<br>$5,1,1$;</p><p>问有多少种不同的分法。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>$n$,$k$ $(6&lt;n≤200,2≤k≤6)$</p><h2 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h2><p>$1$ 个整数，即不同的分法。</p><h2 id="输入样例"><a href="#输入样例" class="headerlink" title="输入样例"></a>输入样例</h2><p>7 3</p><h2 id="输出样例"><a href="#输出样例" class="headerlink" title="输出样例"></a>输出样例</h2><p>4</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>这道题十分简单，就是裸的DFS，代码也只有十多行，不过需要一个小小的剪枝。</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10001</span>]=&#123;<span class="number">1</span>&#125;,n,tot,k;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;n&gt;&gt;k;</span><br><span class="line">dfs(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;tot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t,<span class="keyword">int</span> p)</span></span>&#123;<span class="comment">//一共三个参数，分别是：当前拆分出来的数、数的总和、分的第几份</span></span><br><span class="line"><span class="keyword">if</span>(p==k)&#123;</span><br><span class="line"><span class="keyword">if</span>(t==n) tot++;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=s;t+i*(k-p)&lt;=n;i++)&#123;<span class="comment">//剪枝</span></span><br><span class="line">dfs(i,t+i,p+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      NOIp题
    
    </summary>
    
    
      <category term="洛谷" scheme="http://yoursite.com/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="DFS" scheme="http://yoursite.com/tags/DFS/"/>
    
  </entry>
  
  <entry>
    <title>-其它- A+B|A-B|A*B Problem</title>
    <link href="http://yoursite.com/2018/08/17/blog8/"/>
    <id>http://yoursite.com/2018/08/17/blog8/</id>
    <published>2018-08-17T06:35:43.000Z</published>
    <updated>2018-08-17T06:52:09.773Z</updated>
    
    <content type="html"><![CDATA[<p>当long long不够用时，就得用高精度了！</p><h2 id="高精度加法"><a href="#高精度加法" class="headerlink" title="高精度加法"></a>高精度加法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> a1[<span class="number">500001</span>],b1[<span class="number">500001</span>];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">500001</span>],b[<span class="number">500001</span>],c[<span class="number">500001</span>],x,lenc,la,lb,i;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">    <span class="built_in">memset</span>(c,<span class="number">0</span>,<span class="keyword">sizeof</span>(c));</span><br><span class="line">    gets(a1);</span><br><span class="line">    gets(b1);</span><br><span class="line">    la=<span class="built_in">strlen</span>(a1);</span><br><span class="line">    lb=<span class="built_in">strlen</span>(b1);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=la<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        a[la-i]=a1[i]-<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=lb<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        b[lb-i]=b1[i]-<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    lenc=<span class="number">1</span>;</span><br><span class="line">    x=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(lenc&lt;=la||lenc&lt;=lb)&#123;</span><br><span class="line">        c[lenc]=a[lenc]+b[lenc]+x;</span><br><span class="line">        x=c[lenc]/<span class="number">10</span>;</span><br><span class="line">        c[lenc]%=<span class="number">10</span>;</span><br><span class="line">        lenc++;</span><br><span class="line">    &#125;</span><br><span class="line">    c[lenc]=x;</span><br><span class="line">    <span class="keyword">if</span>(c[lenc]==<span class="number">0</span>) lenc--;</span><br><span class="line">    <span class="keyword">for</span>(i=lenc;i&gt;=<span class="number">1</span>;i--) <span class="built_in">cout</span>&lt;&lt;<span class="keyword">int</span>(c[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="高精度减法"><a href="#高精度减法" class="headerlink" title="高精度减法"></a>高精度减法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">10001</span>],b[<span class="number">10001</span>],c[<span class="number">10001</span>],la,lb,lc,i;</span><br><span class="line">    <span class="keyword">char</span> n[<span class="number">10001</span>],n1[<span class="number">10001</span>],n2[<span class="number">10001</span>];</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">    <span class="built_in">memset</span>(c,<span class="number">0</span>,<span class="keyword">sizeof</span>(c));</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n1&gt;&gt;n2;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strlen</span>(n1)&lt;<span class="built_in">strlen</span>(n2)||(<span class="built_in">strlen</span>(n1)==<span class="built_in">strlen</span>(n2)&amp;&amp;<span class="built_in">strcmp</span>(n1,n2)&lt;<span class="number">0</span>))&#123;</span><br><span class="line">        <span class="built_in">strcpy</span>(n,n1);</span><br><span class="line">        <span class="built_in">strcpy</span>(n1,n2);</span><br><span class="line">        <span class="built_in">strcpy</span>(n2,n);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"-"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    la=<span class="built_in">strlen</span>(n1);</span><br><span class="line">    lb=<span class="built_in">strlen</span>(n2);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=la<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        a[la-i]=<span class="keyword">int</span>(n1[i]-<span class="string">'0'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=lb<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        b[lb-i]=<span class="keyword">int</span>(n2[i]-<span class="string">'0'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    i=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=la||i&lt;=lb)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;b[i])&#123;</span><br><span class="line">            a[i]+=<span class="number">10</span>;</span><br><span class="line">            a[i+<span class="number">1</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">        c[i]=a[i]-b[i];</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    lc=i;</span><br><span class="line">    <span class="keyword">while</span>((c[lc]==<span class="number">0</span>)&amp;&amp;(lc&gt;<span class="number">1</span>)) lc--;</span><br><span class="line">    <span class="keyword">for</span>(i=lc;i&gt;=<span class="number">1</span>;i--) <span class="built_in">cout</span>&lt;&lt;c[i];</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="高精度乘法"><a href="#高精度乘法" class="headerlink" title="高精度乘法"></a>高精度乘法</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//A*B problem.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> a1[<span class="number">2006</span>],b1[<span class="number">2006</span>];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">2006</span>]=&#123;<span class="number">0</span>&#125;,b[<span class="number">2006</span>]=&#123;<span class="number">0</span>&#125;,c[<span class="number">20000050</span>]=&#123;<span class="number">0</span>&#125;,lena,lenb,lenc,i,j,x;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span>(a));</span><br><span class="line">    <span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span>(b));</span><br><span class="line">    <span class="built_in">memset</span>(c,<span class="number">0</span>,<span class="keyword">sizeof</span>(c));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,a1);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,b1);</span><br><span class="line">    lena=<span class="built_in">strlen</span>(a1);</span><br><span class="line">    lenb=<span class="built_in">strlen</span>(b1);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;lena;i++)&#123;</span><br><span class="line">        a[lena-i]=a1[i]-<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;lenb;i++)&#123;</span><br><span class="line">        b[lenb-i]=b1[i]-<span class="string">'0'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=lena;i++)&#123;</span><br><span class="line">        x=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;=lenb;j++)&#123;</span><br><span class="line">            c[i+j<span class="number">-1</span>]=a[i]*b[j]+x+c[i+j<span class="number">-1</span>];</span><br><span class="line">            x=c[i+j<span class="number">-1</span>]/<span class="number">10</span>;</span><br><span class="line">            c[i+j<span class="number">-1</span>]%=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        c[i+lenb]=x;</span><br><span class="line">    &#125;</span><br><span class="line">    lenc=lena+lenb;</span><br><span class="line">    <span class="keyword">while</span>(c[lenc]==<span class="number">0</span>&amp;&amp;lenc&gt;<span class="number">1</span>)&#123;</span><br><span class="line">        lenc--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=lenc;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;c[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">A*B Problem</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      高精板子
    
    </summary>
    
    
      <category term="其它" scheme="http://yoursite.com/tags/%E5%85%B6%E5%AE%83/"/>
    
  </entry>
  
  <entry>
    <title>-贪心- [洛谷 P1106]删数问题</title>
    <link href="http://yoursite.com/2018/08/17/blog7/"/>
    <id>http://yoursite.com/2018/08/17/blog7/</id>
    <published>2018-08-17T06:17:53.000Z</published>
    <updated>2018-08-17T09:04:55.259Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>键盘输入一个高精度的正整数 $N$，去掉其中任意 $k$ 个数字后剩下的数字按原左右次序将组成一个新的正整数。编程对给定的 $N$ 和 $k$ ，寻找一种方案使得剩下的数字组成的新数最小。</p><p>输出应包括所去掉的数字的位置和组成的新的整数。（ $N$ 不超过 $250$ 位） 输入数据均不需判错。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>$n$(高精度的正整数)</p><p>$k$(需要删除的数字个数)</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>最后剩下的最小数。</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><p>175438</p><p>4</p><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><p>13</p><h1 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h1><p>这道题是贪心算法经典问题，思路：每次都选取一个使得剩下的数最小的数字。</p><p>注意：每次都选取最大的数字是错误的！</p><p><del>我因为这个错了五次</del></p><p>废话不多说，代码简单易懂，直接上代码：</p><h2 id="COde"><a href="#COde" class="headerlink" title="COde"></a>COde</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">260</span>],b[<span class="number">260</span>],k[<span class="number">260</span>];</span><br><span class="line"><span class="keyword">int</span> p;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%s"</span>,a);</span><br><span class="line"><span class="built_in">cin</span>&gt;&gt;p;</span><br><span class="line"><span class="keyword">while</span>(p&gt;=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(a);i++)&#123;</span><br><span class="line"><span class="built_in">strcpy</span>(k,a);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;<span class="built_in">strlen</span>(a);j++)&#123;</span><br><span class="line">k[j]=k[j+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> d;</span><br><span class="line"><span class="built_in">sscanf</span>(k,<span class="string">"%d"</span>,&amp;d);</span><br><span class="line"><span class="keyword">if</span>(d!=<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">while</span>(k[j]==<span class="string">'0'</span>)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> t=j;t&lt;<span class="built_in">strlen</span>(a)<span class="number">-1</span>;t++)&#123;</span><br><span class="line">k[t]=k[t+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>) &#123;</span><br><span class="line"><span class="built_in">strcpy</span>(b,k);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strlen</span>(b)&gt;<span class="built_in">strlen</span>(k)) &#123;</span><br><span class="line"><span class="built_in">strcpy</span>(b,k);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(b,k)&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">strcpy</span>(b,k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">strcpy</span>(a,b);</span><br><span class="line">p--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      一道贪心题
    
    </summary>
    
    
      <category term="洛谷" scheme="http://yoursite.com/tags/%E6%B4%9B%E8%B0%B7/"/>
    
      <category term="贪心" scheme="http://yoursite.com/tags/%E8%B4%AA%E5%BF%83/"/>
    
  </entry>
  
  <entry>
    <title>-其它-对拍模板</title>
    <link href="http://yoursite.com/2018/08/17/blog6/"/>
    <id>http://yoursite.com/2018/08/17/blog6/</id>
    <published>2018-08-17T06:16:23.000Z</published>
    <updated>2018-08-17T09:05:03.980Z</updated>
    
    <content type="html"><![CDATA[<p>在找不出自己的输出有什么问题的情况下，可使用这个对拍程序</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        system(<span class="string">"data &gt; input.txt"</span>);</span><br><span class="line">        system(<span class="string">"a+b &lt; input.txt &gt; 1.out"</span>);</span><br><span class="line">        system(<span class="string">"test &lt; input.txt &gt; 2.out"</span>);</span><br><span class="line">        <span class="keyword">if</span>(system(<span class="string">"fc 1.out 2.out"</span>)) </span><br><span class="line">        &#123;</span><br><span class="line">            system(<span class="string">"pause"</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      一个小程序
    
    </summary>
    
    
      <category term="其它" scheme="http://yoursite.com/tags/%E5%85%B6%E5%AE%83/"/>
    
  </entry>
  
  <entry>
    <title>-数论-重要公式整理</title>
    <link href="http://yoursite.com/2018/08/17/blog5/"/>
    <id>http://yoursite.com/2018/08/17/blog5/</id>
    <published>2018-08-17T06:12:49.000Z</published>
    <updated>2018-08-17T09:05:01.595Z</updated>
    
    <content type="html"><![CDATA[<p>1、<script type="math/tex">\sum_{i=1}^n {2i-1} = i^2</script></p><p>2、<script type="math/tex">\sum_{i=1}^n {i(i+1)} =\frac {n(n+1)(n+2)}{3}</script></p><p>3、<script type="math/tex">\sum_{i=1}^n {i^2(i-1)!} = (n+1)!+1</script></p><p>4、<script type="math/tex">\sum_{i=1}^n {i^2} =\frac {n(n+1)(2n+1)}{6}</script></p><p>5、<script type="math/tex">\sum_{i=1}^n {i^3} = (\frac{i(i+1)}{2})^2</script></p>]]></content>
    
    <summary type="html">
    
      数论知识点
    
    </summary>
    
    
      <category term="数论" scheme="http://yoursite.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>-数论-质数唯一分解定理</title>
    <link href="http://yoursite.com/2018/08/17/blog4/"/>
    <id>http://yoursite.com/2018/08/17/blog4/</id>
    <published>2018-08-17T06:06:43.000Z</published>
    <updated>2018-08-17T06:28:35.460Z</updated>
    
    <content type="html"><![CDATA[<p>这有一个非常重要的公式：</p><p>$\prod_{i=1}^n p_i^{a_i}$ </p><p>其中 p_i 为质因数，a_i 为每个质因数的指数</p>]]></content>
    
    <summary type="html">
    
      数论知识点
    
    </summary>
    
    
      <category term="数论" scheme="http://yoursite.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>-数论-线性筛素数</title>
    <link href="http://yoursite.com/2018/08/17/blog3/"/>
    <id>http://yoursite.com/2018/08/17/blog3/</id>
    <published>2018-08-17T05:43:24.000Z</published>
    <updated>2018-08-17T09:00:58.192Z</updated>
    
    <content type="html"><![CDATA[<p>在C++中，筛素数是一个非常重要算法。</p><p>我花了半天时间才明白的欧拉筛（我实在是太蒻了）。</p><h2 id="最愚蠢的方法："><a href="#最愚蠢的方法：" class="headerlink" title="最愚蠢的方法："></a>最愚蠢的方法：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"yes"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"no"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="普通方法："><a href="#普通方法：" class="headerlink" title="普通方法："></a>普通方法：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n,k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="built_in">sqrt</span>(n);i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"yes"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"no"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上两种方法其实都是判定方法，并不是筛法，下面说真正的筛法：</p><h2 id="埃筛法："><a href="#埃筛法：" class="headerlink" title="埃筛法："></a>埃筛法：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j,n,flag=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">bool</span> a[<span class="number">100</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">2</span>;j&lt;=<span class="number">100</span>;j++)&#123;</span><br><span class="line">            a[i*j]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> p=<span class="number">0</span>;p&lt;=<span class="number">100</span>;p++)</span><br><span class="line">    <span class="keyword">if</span>(a[p]==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;a[p]&lt;&lt;<span class="string">" "</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>思路：首先将所有2的倍数标为1，再将所有3的倍数标为1……以此类推。</p><h2 id="欧拉筛："><a href="#欧拉筛：" class="headerlink" title="欧拉筛："></a>欧拉筛：</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXN 1000000</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> chk[MAXN]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> p[MAXN]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> t=<span class="number">0</span>; <span class="number">6</span>     <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;MAXN;i++)&#123;</span><br><span class="line">           <span class="keyword">if</span> (!chk[i])</span><br><span class="line">           p[t++]=i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;t&amp;&amp; i*p[j]&lt;MAXN;j++)</span><br><span class="line">        &#123;</span><br><span class="line">        chk[i*p[j]] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (i%p[j]==<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>思路：由于埃筛法做了许多不必要的循环，所以欧拉筛在埃筛法的基础上，省去了一些步骤，时间复杂度$O(n)$。</p>]]></content>
    
    <summary type="html">
    
      数论知识点
    
    </summary>
    
    
      <category term="数论" scheme="http://yoursite.com/tags/%E6%95%B0%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>-其它-名字竞技场</title>
    <link href="http://yoursite.com/2018/08/17/blog2/"/>
    <id>http://yoursite.com/2018/08/17/blog2/</id>
    <published>2018-08-17T05:41:31.000Z</published>
    <updated>2018-08-17T06:05:24.611Z</updated>
    
    <content type="html"><![CDATA[<p>自己写的，dalao勿喷</p><p>V1.1 有了名字判重系统，以及可以循环玩游戏了！</p><p>V1.2 可以多人玩游戏了！</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">note</span>&#123;</span></span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> hp;</span><br><span class="line">    <span class="keyword">int</span> gj;</span><br><span class="line">&#125;;</span><br><span class="line">note player[<span class="number">16</span>];</span><br><span class="line"><span class="keyword">int</span> hit1,hit2,g[<span class="number">11</span>],pdh1=<span class="number">0</span>,pdh2=<span class="number">0</span>,n;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shuru</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gj</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">youxi</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">slowsay</span><span class="params">(<span class="keyword">char</span> a[])</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(a);i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;a[i];</span><br><span class="line">        Sleep(<span class="number">25</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    srand((<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line">    slowsay(<span class="string">"欢迎来到名字竞技场！ by Steve_bm"</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    slowsay(<span class="string">"V 1.2"</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入人数："</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;n;</span><br><span class="line">    shuru();</span><br><span class="line">    youxi();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gj</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> op1,op2;</span><br><span class="line">    op1=rand()%n+<span class="number">1</span>;</span><br><span class="line">    op2=rand()%n+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>((op1==op2)||(player[op1].hp==<span class="number">0</span>||player[op2].hp==<span class="number">0</span>))&#123;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">            op1=rand()%n+<span class="number">1</span>;</span><br><span class="line">            op2=rand()%n+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>((op1!=op2)&amp;&amp;(player[op1].hp!=<span class="number">0</span>&amp;&amp;player[op2].hp!=<span class="number">0</span>)) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    hit1=rand()%player[op1].gj+<span class="number">1</span>;</span><br><span class="line">    player[op2].hp-=hit1;</span><br><span class="line">       <span class="keyword">if</span>(player[op2].hp&lt;=<span class="number">0</span>) player[op2].hp=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;player[op1].a&lt;&lt;<span class="string">"对"</span>&lt;&lt;player[op2].a&lt;&lt;<span class="string">"发起了攻击"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    Sleep(<span class="number">500</span>);</span><br><span class="line">    <span class="keyword">if</span>(hit1&gt;=((player[op1].gj/<span class="number">3</span>)*<span class="number">2</span>)) <span class="built_in">cout</span>&lt;&lt;player[op1].a&lt;&lt;<span class="string">"暴击！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;player[op2].a&lt;&lt;<span class="string">"受到了"</span>&lt;&lt;hit1&lt;&lt;<span class="string">"点伤害"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    Sleep(<span class="number">250</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;player[op2].a&lt;&lt;<span class="string">"现在的生命值是"</span>&lt;&lt;player[op2].hp&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">youxi</span><span class="params">()</span></span>&#123;</span><br><span class="line">    Sleep(<span class="number">1200</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> t=<span class="number">1</span>;t&lt;=n;t++)&#123;</span><br><span class="line">        <span class="keyword">int</span> n1=player[t].a[<span class="number">0</span>]+<span class="number">200</span>;</span><br><span class="line">        <span class="keyword">int</span> q1=player[t].a[<span class="built_in">strlen</span>(player[t].a)<span class="number">-1</span>];</span><br><span class="line">        player[t].hp=(rand()%n1+<span class="number">30</span>)*<span class="number">9</span>;</span><br><span class="line">        player[t].gj=(rand()%q1+<span class="number">30</span>)*<span class="number">7</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    system(<span class="string">"cls"</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> b=<span class="number">1</span>;b&lt;=n;b++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;player[b].a&lt;&lt;<span class="string">" "</span>&lt;&lt;<span class="string">"HP:"</span>&lt;&lt;player[b].hp&lt;&lt;<span class="string">" "</span>&lt;&lt;<span class="string">"攻击力:"</span>&lt;&lt;player[b].gj&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    Sleep(<span class="number">3000</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"现在开始!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    Sleep(<span class="number">1500</span>);</span><br><span class="line">    <span class="keyword">int</span> w;</span><br><span class="line">    <span class="keyword">int</span> f=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">        gj();</span><br><span class="line">        Sleep(<span class="number">1000</span>);</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(player[i].hp==<span class="number">0</span>) f++;</span><br><span class="line">            <span class="keyword">if</span>(player[i].hp&gt;<span class="number">0</span>) w=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(f==n<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">        f=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Sleep(<span class="number">1500</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"胜利者是"</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;player[w].a&lt;&lt;<span class="string">"!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> m=<span class="number">1</span>;m&lt;=n;m++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(player[m].hp==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;player[m].a&lt;&lt;<span class="string">"完败!"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">char</span> l;</span><br><span class="line">    Sleep(<span class="number">3000</span>);</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Do you want to play again?(Y/N)"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;l;</span><br><span class="line">    <span class="keyword">if</span>(l==<span class="string">'Y'</span>||l==<span class="string">'y'</span>)&#123;</span><br><span class="line">        system(<span class="string">"cls"</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> h=<span class="number">1</span>;h&lt;=n;h++)&#123;</span><br><span class="line">            <span class="built_in">memset</span>(player[h].a,<span class="number">0</span>,<span class="keyword">sizeof</span>(player[h].a));</span><br><span class="line">        &#125;</span><br><span class="line">        youxi();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">shuru</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">1</span>;l&lt;=n;l++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"请输入玩家"</span>&lt;&lt;l&lt;&lt;<span class="string">"的名字（名字不超过10字符，最小3字符，不能有汉字!）："</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,player[l].a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> yy[<span class="number">11</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> o=i+<span class="number">1</span>;o&lt;=n;o++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> q=<span class="number">0</span>;q&lt;<span class="built_in">strlen</span>(player[i].a);q++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(player[i].a[q]==player[o].a[q]) yy[i]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> u=<span class="number">1</span>;u&lt;=n;u++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(yy[u]==<span class="built_in">strlen</span>(player[u].a))&#123;</span><br><span class="line">            system(<span class="string">"cls"</span>);</span><br><span class="line">              <span class="built_in">cout</span>&lt;&lt;<span class="string">"输入的名字不能相同！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">               Sleep(<span class="number">100</span>);</span><br><span class="line">               <span class="built_in">cout</span>&lt;&lt;<span class="string">"请重新输入！"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">              shuru();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> youxi();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      闲来无事做了一个小游戏
    
    </summary>
    
    
      <category term="其它" scheme="http://yoursite.com/tags/%E5%85%B6%E5%AE%83/"/>
    
  </entry>
  
</feed>
